{"ast":null,"code":"var _jsxFileName = \"C:\\\\Coding\\\\PumkpinPatch-main\\\\pumkpin-patch-app\\\\01-pumkpin-patch-frontend\\\\src\\\\components\\\\Login\\\\LoginPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Card from '../UI/Card';\nimport Modal from '../UI/Modal';\nimport classes from './LoginPage.module.css';\nimport * as firebaseui from 'firebaseui';\nimport 'firebaseui/dist/firebaseui.css';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth.js';\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginPage = props => {\n  _s();\n\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [emailIsValid, setEmailIsValid] = useState();\n  const [enteredPassword, setEnteredPassword] = useState('');\n  const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const emailChangeHandler = event => {\n    setEnteredEmail(event.target.value);\n    setFormIsValid(event.target.value.includes('@') && enteredPassword.trim().length > 6);\n  };\n\n  const passwordChangeHandler = event => {\n    setEnteredPassword(event.target.value);\n    setFormIsValid(event.target.value.trim().length > 6 && enteredEmail.includes('@'));\n  };\n\n  const validateEmailHandler = () => {\n    setEmailIsValid(enteredEmail.includes('@'));\n  };\n\n  const validatePasswordHandler = () => {\n    setPasswordIsValid(enteredPassword.trim().length > 6);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n\n    if (formIsValid) {\n      props.onLogin(enteredEmail, enteredPassword);\n    }\n\n    if (!formIsValid) {\n      alert(\"Please Enter a Valid Email and Password!\");\n    }\n  };\n\n  const loginHandler = event => {\n    props.onLoginClick(true);\n    console.log(\"clicked\");\n  };\n\n  const ForgotHandler = event => {\n    props.onForgotPassword(event);\n  }; // return (\n  //  <Modal>\n  //    <Card className={classes.login}>\n  //      <form onSubmit={submitHandler}>\n  //         <div\n  //           className={`${classes.control} ${emailIsValid === false ? classes.invalid : ''\n  //             }`}\n  //         >\n  //           <label htmlFor=\"email\">E-Mail</label>\n  //           <input\n  //             type=\"email\"\n  //             id=\"email\"\n  //             value={enteredEmail}\n  //             onChange={emailChangeHandler}\n  //             onBlur={validateEmailHandler}\n  //           />\n  //         </div>\n  //         <div\n  //           className={`${classes.control} ${passwordIsValid === false ? classes.invalid : ''\n  //             }`}\n  //         >\n  //           <label htmlFor=\"password\">Password</label>\n  //           <input\n  //             type=\"password\"\n  //             id=\"password\"\n  //             value={enteredPassword}\n  //             onChange={passwordChangeHandler}\n  //             onBlur={validatePasswordHandler}\n  //           />\n  //         </div>\n  //         <div className={classes.actions}>\n  //         </div>\n  //         <button type='submit' className={classes.button}>Login</button>\n  //       </form>\n  //       <button className={classes.CancelButton} onClick={loginHandler}>Cancel</button> \n  //       <button className={classes.FPbutton} onClick={() => { ForgotHandler(true); loginHandler(); }}>Forgot Password?</button> \n  //       </Card>\n  //       </Modal>\n  //       );\n\n\n  const uiConfig = {\n    // Popup signin flow rather than redirect flow.\n    signInFlow: 'popup',\n    // Redirect to /signedIn after sign in is successful. Alternatively you can provide a callbacks.signInSuccess function.\n    signInSuccessUrl: '',\n    // We will display Google and Facebook as auth providers.\n    signInOptions: [firebase.auth.GoogleAuthProvider.PROVIDER_ID, firebase.auth.EmailAuthProvider.PROVIDER_ID]\n  };\n  useEffect(() => {\n    const unregisterAuthObserver = firebase.auth().onAuthStateChanged(user => {\n      props.setIsLoggedIn(!!user);\n    });\n    return () => unregisterAuthObserver(); // Make sure we un-register Firebase observers when the component unmounts.\n  }, [props]);\n\n  if (props.setIsLoggedIn) {\n    var user = firebase.auth().c;\n    localStorage.setItem(\"uid\", user.uid);\n  }\n\n  if (!props.isLoggedIn) {\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: classes.login,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"My App\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Please sign-in:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(StyledFirebaseAuth, {\n            uiConfig: uiConfig,\n            firebaseAuth: firebase.auth()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 5\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"My App\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Welcome \", firebase.auth().currentUser.displayName, \"! You are now signed-in!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          onClick: () => firebase.auth().signOut(),\n          children: \"Sign-out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 3\n  }, this);\n};\n\n_s(LoginPage, \"LXbrkIlmixekYK8sfxwnk7twvaE=\");\n\n_c = LoginPage;\nexport default LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useEffect","Card","Modal","classes","firebaseui","StyledFirebaseAuth","firebase","LoginPage","props","enteredEmail","setEnteredEmail","emailIsValid","setEmailIsValid","enteredPassword","setEnteredPassword","passwordIsValid","setPasswordIsValid","formIsValid","setFormIsValid","emailChangeHandler","event","target","value","includes","trim","length","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","alert","loginHandler","onLoginClick","console","log","ForgotHandler","onForgotPassword","uiConfig","signInFlow","signInSuccessUrl","signInOptions","auth","GoogleAuthProvider","PROVIDER_ID","EmailAuthProvider","unregisterAuthObserver","onAuthStateChanged","user","setIsLoggedIn","c","localStorage","setItem","uid","isLoggedIn","login","currentUser","displayName","signOut"],"sources":["C:/Coding/PumkpinPatch-main/pumkpin-patch-app/01-pumkpin-patch-frontend/src/components/Login/LoginPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Card from '../UI/Card';\r\nimport Modal from '../UI/Modal';\r\nimport classes from './LoginPage.module.css'\r\n\r\nimport * as firebaseui from 'firebaseui'\r\nimport 'firebaseui/dist/firebaseui.css'\r\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth.js';\r\nimport firebase from 'firebase/compat/app';\r\nimport 'firebase/compat/auth';\r\n\r\nconst LoginPage = (props) => {\r\n  const [enteredEmail, setEnteredEmail] = useState('');\r\n  const [emailIsValid, setEmailIsValid] = useState();\r\n  const [enteredPassword, setEnteredPassword] = useState('');\r\n  const [passwordIsValid, setPasswordIsValid] = useState();\r\n  const [formIsValid, setFormIsValid] = useState(false);\r\n\r\n  const emailChangeHandler = (event) => {\r\n    setEnteredEmail(event.target.value);\r\n\r\n    setFormIsValid(\r\n      event.target.value.includes('@') && enteredPassword.trim().length > 6\r\n    );\r\n  };\r\n\r\n  const passwordChangeHandler = (event) => {\r\n    setEnteredPassword(event.target.value);\r\n    setFormIsValid(\r\n      event.target.value.trim().length > 6 && enteredEmail.includes('@')\r\n    );\r\n  };\r\n\r\n  const validateEmailHandler = () => {\r\n    setEmailIsValid(enteredEmail.includes('@'));\r\n  };\r\n\r\n  const validatePasswordHandler = () => {\r\n    setPasswordIsValid(enteredPassword.trim().length > 6);\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (formIsValid) {\r\n      props.onLogin(enteredEmail, enteredPassword);\r\n    }\r\n\r\n    if (!formIsValid) {\r\n      alert(\"Please Enter a Valid Email and Password!\")\r\n    }\r\n  };\r\n  const loginHandler = event => {\r\n    props.onLoginClick(true);\r\n    console.log(\"clicked\");\r\n  };\r\n  const ForgotHandler = event => {\r\n    props.onForgotPassword(event);\r\n  };\r\n\r\n \r\n\r\n  // return (\r\n  //  <Modal>\r\n  //    <Card className={classes.login}>\r\n  //      <form onSubmit={submitHandler}>\r\n  //         <div\r\n  //           className={`${classes.control} ${emailIsValid === false ? classes.invalid : ''\r\n  //             }`}\r\n  //         >\r\n\r\n  //           <label htmlFor=\"email\">E-Mail</label>\r\n  //           <input\r\n  //             type=\"email\"\r\n  //             id=\"email\"\r\n  //             value={enteredEmail}\r\n  //             onChange={emailChangeHandler}\r\n  //             onBlur={validateEmailHandler}\r\n  //           />\r\n  //         </div>\r\n  //         <div\r\n  //           className={`${classes.control} ${passwordIsValid === false ? classes.invalid : ''\r\n  //             }`}\r\n  //         >\r\n  //           <label htmlFor=\"password\">Password</label>\r\n  //           <input\r\n  //             type=\"password\"\r\n  //             id=\"password\"\r\n  //             value={enteredPassword}\r\n  //             onChange={passwordChangeHandler}\r\n  //             onBlur={validatePasswordHandler}\r\n  //           />\r\n  //         </div>\r\n  //         <div className={classes.actions}>\r\n\r\n  //         </div>\r\n          \r\n  //         <button type='submit' className={classes.button}>Login</button>\r\n\r\n  //       </form>\r\n  //       <button className={classes.CancelButton} onClick={loginHandler}>Cancel</button> \r\n  //       <button className={classes.FPbutton} onClick={() => { ForgotHandler(true); loginHandler(); }}>Forgot Password?</button> \r\n  //       </Card>\r\n  //       </Modal>\r\n  //       );\r\n     \r\n  const uiConfig = {\r\n    // Popup signin flow rather than redirect flow.\r\n    signInFlow: 'popup',\r\n    // Redirect to /signedIn after sign in is successful. Alternatively you can provide a callbacks.signInSuccess function.\r\n    signInSuccessUrl: '',\r\n    // We will display Google and Facebook as auth providers.\r\n    signInOptions: [\r\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID,\r\n      firebase.auth.EmailAuthProvider.PROVIDER_ID,\r\n    ],\r\n  };\r\n\r\n\r\n useEffect(() => {\r\n  const unregisterAuthObserver = firebase.auth().onAuthStateChanged(user => {\r\n    props.setIsLoggedIn(!!user);\r\n    \r\n     \r\n  });\r\n  return () => unregisterAuthObserver(); // Make sure we un-register Firebase observers when the component unmounts.\r\n}, [props]);\r\n if(props.setIsLoggedIn){\r\n  var user = firebase.auth().c\r\n  localStorage.setItem(\"uid\",user.uid)}\r\nif (!props.isLoggedIn) {\r\n  return (\r\n    <Modal>\r\n      <Card className={classes.login}>\r\n    <div>\r\n      <h1>My App</h1>\r\n      <p>Please sign-in:</p>\r\n      <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()} />\r\n    </div>\r\n</Card>\r\n    </Modal>\r\n  );\r\n}\r\nreturn (\r\n  <Modal>\r\n    <Card>\r\n  <div>\r\n    <h1>My App</h1>\r\n    <p>Welcome {firebase.auth().currentUser.displayName}! You are now signed-in!</p>\r\n    <a onClick={() => firebase.auth().signOut()}>Sign-out</a>\r\n    \r\n  </div> \r\n  </Card>\r\n  </Modal>\r\n); \r\n \r\n}\r\nexport default LoginPage;"],"mappings":"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"},"metadata":{},"sourceType":"module"}