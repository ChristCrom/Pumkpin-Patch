{"ast":null,"code":"var _jsxFileName = \"C:\\\\Coding\\\\PumkpinPatch-main\\\\pumkpin-patch-app\\\\01-pumkpin-patch-frontend\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useState } from \"react\";\nimport Login from \"./components/Layout/Login\";\nimport Header from \"./components/Layout/Header\";\nimport PhotoGallery from \"./components/FrontPage/PhotoGallery\";\nimport FrontBanner from \"./components/FrontPage/FrontBanner\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [loginActive, setLoginActive] = useState(false);\n\n  const loginHandler = (email, password) => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n    setIsLoggedIn(true);\n  };\n\n  const LoginActiveHandler = () => {\n    setLoginActive(true);\n    console.log(\"setting to true\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [loginActive && /*#__PURE__*/_jsxDEV(Login, {\n      onLoginClick: LoginActiveHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      onLoginClick: Login\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FrontBanner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PhotoGallery, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"m3bT7+PotmEMK3XfCGwSej9tqDQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Fragment","useState","Login","Header","PhotoGallery","FrontBanner","React","App","isLoggedIn","setIsLoggedIn","loginActive","setLoginActive","loginHandler","email","password","LoginActiveHandler","console","log"],"sources":["C:/Coding/PumkpinPatch-main/pumkpin-patch-app/01-pumkpin-patch-frontend/src/App.js"],"sourcesContent":["import { Fragment, useState} from \"react\";\nimport Login from \"./components/Layout/Login\";\nimport Header from \"./components/Layout/Header\";\nimport PhotoGallery from \"./components/FrontPage/PhotoGallery\"\nimport FrontBanner from \"./components/FrontPage/FrontBanner\"\nimport React from \"react\";\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [loginActive, setLoginActive] = useState(false);\n\n  const loginHandler = (email, password) => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n    setIsLoggedIn(true);\n  };\n\n  const LoginActiveHandler = () => {\n    \n    setLoginActive(true);\n    console.log(\"setting to true\")\n  };\n  return (\n    <Fragment>\n     {loginActive && <Login onLoginClick={LoginActiveHandler}/>}\n      <Header onLoginClick={Login} />\n      <FrontBanner />\n      <PhotoGallery />\n    </Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,YAAP,MAAyB,qCAAzB;AACA,OAAOC,WAAP,MAAwB,oCAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AACA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,KAAD,CAA5C;EACA,MAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,KAAD,CAA9C;;EAEA,MAAMW,YAAY,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;IACxC;IACA;IACAL,aAAa,CAAC,IAAD,CAAb;EACD,CAJD;;EAMA,MAAMM,kBAAkB,GAAG,MAAM;IAE/BJ,cAAc,CAAC,IAAD,CAAd;IACAK,OAAO,CAACC,GAAR,CAAY,iBAAZ;EACD,CAJD;;EAKA,oBACE,QAAC,QAAD;IAAA,WACEP,WAAW,iBAAI,QAAC,KAAD;MAAO,YAAY,EAAEK;IAArB;MAAA;MAAA;MAAA;IAAA,QADjB,eAEE,QAAC,MAAD;MAAQ,YAAY,EAAEb;IAAtB;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE,QAAC,WAAD;MAAA;MAAA;MAAA;IAAA,QAHF,eAIE,QAAC,YAAD;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAQD;;GAvBQK,G;;KAAAA,G;AAyBT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}