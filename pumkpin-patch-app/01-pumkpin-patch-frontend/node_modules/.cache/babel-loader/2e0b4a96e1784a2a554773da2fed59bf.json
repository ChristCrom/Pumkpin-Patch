{"ast":null,"code":"'use strict';\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nvar _reactAddons = require('react');\n\nvar _reactAddons2 = _interopRequireDefault(_reactAddons);\n\nvar _blacklist = require('blacklist');\n\nvar _blacklist2 = _interopRequireDefault(_blacklist);\n\nvar _Fade = require('./Fade');\n\nvar _Fade2 = _interopRequireDefault(_Fade);\n\nvar _Icon = require('./Icon');\n\nvar _Icon2 = _interopRequireDefault(_Icon);\n\nvar _Portal = require('./Portal');\n\nvar _Portal2 = _interopRequireDefault(_Portal);\n\nvar Transition = _reactAddons2['default'].addons.TransitionGroup;\nvar BODY = document.getElementsByTagName('body')[0];\n\nvar Lightbox = _reactAddons2['default'].createClass({\n  displayName: 'Lightbox',\n  propTypes: {\n    backdropClosesModal: _reactAddons2['default'].PropTypes.bool,\n    enableKeyboardInput: _reactAddons2['default'].PropTypes.bool,\n    initialImage: _reactAddons2['default'].PropTypes.number,\n    height: _reactAddons2['default'].PropTypes.number,\n    images: _reactAddons2['default'].PropTypes.array,\n    isOpen: _reactAddons2['default'].PropTypes.bool,\n    onClose: _reactAddons2['default'].PropTypes.func,\n    showCloseButton: _reactAddons2['default'].PropTypes.bool,\n    width: _reactAddons2['default'].PropTypes.number\n  },\n  getDefaultProps: function getDefaultProps() {\n    return {\n      backdropClosesModal: true,\n      enableKeyboardInput: true,\n      initialImage: 0,\n      height: 600,\n      width: 900\n    };\n  },\n  getInitialState: function getInitialState() {\n    return {\n      currentImage: this.props.initialImage\n    };\n  },\n  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {\n    this.setState({\n      currentImage: nextProps.initialImage\n    });\n\n    if (nextProps.isOpen && nextProps.enableKeyboardInput) {\n      window.addEventListener('keydown', this.handleKeyboardInput);\n    } else {\n      window.removeEventListener('keydown', this.handleKeyboardInput);\n    }\n\n    if (nextProps.isOpen) {\n      BODY.style.overflow = 'hidden';\n    } else {\n      BODY.style.overflow = null;\n    }\n  },\n  handleKeyboardInput: function handleKeyboardInput(event) {\n    if (event.keyCode === 37) {\n      this.gotoPrevious();\n    } else if (event.keyCode === 39) {\n      this.gotoNext();\n    } else if (event.keyCode === 27) {\n      this.props.onClose();\n    } else {\n      return false;\n    }\n  },\n  gotoPrevious: function gotoPrevious() {\n    if (this.state.currentImage === 0) return;\n    this.setState({\n      currentImage: this.state.currentImage - 1\n    });\n  },\n  gotoNext: function gotoNext() {\n    if (this.state.currentImage === this.props.images.length - 1) return;\n    this.setState({\n      currentImage: this.state.currentImage + 1\n    });\n  },\n  renderArrowPrev: function renderArrowPrev() {\n    if (this.state.currentImage === 0) return;\n    return _reactAddons2['default'].createElement(_Fade2['default'], {\n      key: 'arrowPrev'\n    }, _reactAddons2['default'].createElement('button', {\n      type: 'button',\n      style: _extends({}, styles.arrow, styles.arrowPrev),\n      onClick: this.gotoPrevious\n    }, _reactAddons2['default'].createElement(_Icon2['default'], {\n      type: 'arrowLeft'\n    })));\n  },\n  renderArrowNext: function renderArrowNext() {\n    if (this.state.currentImage === this.props.images.length - 1) return;\n    return _reactAddons2['default'].createElement(_Fade2['default'], {\n      key: 'arrowNext'\n    }, _reactAddons2['default'].createElement('button', {\n      type: 'button',\n      style: _extends({}, styles.arrow, styles.arrowNext),\n      onClick: this.gotoNext\n    }, _reactAddons2['default'].createElement(_Icon2['default'], {\n      type: 'arrowRight'\n    })));\n  },\n  renderBackdrop: function renderBackdrop() {\n    if (!this.props.isOpen) return;\n    return _reactAddons2['default'].createElement(_Fade2['default'], {\n      key: 'backdrop'\n    }, _reactAddons2['default'].createElement('div', {\n      key: 'backdrop',\n      style: styles.backdrop,\n      onClick: this.props.backdropClosesModal ? this.props.onClose : null\n    }));\n  },\n  renderCloseButton: function renderCloseButton() {\n    if (!this.props.showCloseButton) return;\n    return _reactAddons2['default'].createElement(_Fade2['default'], {\n      key: 'closeButton'\n    }, _reactAddons2['default'].createElement('button', {\n      style: styles.close,\n      onClick: this.props.onClose\n    }, 'Close'));\n  },\n  renderDialog: function renderDialog() {\n    if (!this.props.isOpen) return;\n    return _reactAddons2['default'].createElement(_Fade2['default'], {\n      key: 'dialog',\n      style: _extends({}, styles.dialog, {\n        height: this.props.height,\n        width: this.props.width\n      })\n    }, this.renderImages(), _reactAddons2['default'].createElement(Transition, {\n      component: 'div'\n    }, this.renderArrowPrev()), _reactAddons2['default'].createElement(Transition, {\n      component: 'div'\n    }, this.renderArrowNext()), _reactAddons2['default'].createElement(Transition, {\n      component: 'div'\n    }, this.renderCloseButton()));\n  },\n  renderImages: function renderImages() {\n    var images = this.props.images;\n    var currentImage = this.state.currentImage;\n    if (!images || !images.length) return;\n    return _reactAddons2['default'].createElement(Transition, {\n      component: 'div'\n    }, _reactAddons2['default'].createElement(_Fade2['default'], {\n      key: 'image' + currentImage\n    }, _reactAddons2['default'].createElement('img', {\n      src: images[currentImage],\n      style: styles.image\n    })));\n  },\n  render: function render() {\n    var props = (0, _blacklist2['default'])(this.props, 'backdropClosesModal', 'initialImage', 'height', 'images', 'isOpen', 'onClose', 'showCloseButton', 'width');\n    return _reactAddons2['default'].createElement(_Portal2['default'], props, _reactAddons2['default'].createElement(Transition, {\n      component: 'div'\n    }, this.renderDialog()), _reactAddons2['default'].createElement(Transition, {\n      component: 'div'\n    }, this.renderBackdrop()));\n  }\n});\n\nvar styles = {\n  arrow: {\n    background: 'none',\n    border: 'none',\n    bottom: 0,\n    color: 'white',\n    cursor: 'pointer',\n    fontSize: 48,\n    right: 0,\n    outline: 'none',\n    padding: '0 2%',\n    position: 'absolute',\n    top: 0,\n    width: '10%',\n    zIndex: 1002,\n    // disable user select\n    WebkitTouchCallout: 'none',\n    WebkitUserSelect: 'none',\n    MozUserSelect: 'none',\n    msUserSelect: 'none',\n    userSelect: 'none'\n  },\n  arrowNext: {\n    right: 0\n  },\n  arrowPrev: {\n    left: 0\n  },\n  backdrop: {\n    backgroundColor: 'rgba(0,0,0,0.66)',\n    bottom: 0,\n    left: 0,\n    position: 'fixed',\n    right: 0,\n    top: 0,\n    zIndex: 1000\n  },\n  close: {\n    background: 'none',\n    border: 'none',\n    bottom: -32,\n    color: 'white',\n    cursor: 'pointer',\n    fontSize: 16,\n    height: 32,\n    left: 0,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    outline: 'none',\n    padding: 0,\n    position: 'absolute',\n    right: 0,\n    textAlign: 'center',\n    textTransform: 'uppercase',\n    width: 100\n  },\n  dialog: {\n    left: 0,\n    lineHeight: 1,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    maxHeight: '80%',\n    maxWidth: '100%',\n    position: 'fixed',\n    right: 0,\n    top: '50%',\n    zIndex: 1001,\n    WebkitTransform: 'translateY(-50%)',\n    MozTransform: 'translateY(-50%)',\n    msTransform: 'translateY(-50%)',\n    transform: 'translateY(-50%)'\n  },\n  image: {\n    boxShadow: '0 1px 4px rgba(0,0,0,0.25)',\n    maxHeight: '100%',\n    maxWidth: '80%',\n    position: 'absolute',\n    // center the image within the dialog\n    left: '50%',\n    top: '50%',\n    WebkitTransform: 'translate(-50%, -50%)',\n    MozTransform: 'translate(-50%, -50%)',\n    msTransform: 'translate(-50%, -50%)',\n    transform: 'translate(-50%, -50%)',\n    // disable user select\n    WebkitTouchCallout: 'none',\n    WebkitUserSelect: 'none',\n    MozUserSelect: 'none',\n    msUserSelect: 'none',\n    userSelect: 'none'\n  }\n};\nmodule.exports = Lightbox;","map":null,"metadata":{},"sourceType":"script"}