{"ast":null,"code":"var _jsxFileName = \"C:\\\\Coding\\\\PumkpinPatch-main\\\\pumkpin-patch-app\\\\01-pumkpin-patch-frontend\\\\src\\\\components\\\\Login\\\\LoginMain.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Fragment, useState } from \"react\";\nimport LoginPage from \"./LoginPage\";\nimport ForgotPassword from \"./ForgotPassword\";\nimport Card from '../UI/Card';\nimport Modal from '../UI/Modal';\nimport ChangePassword from \"./ChangePassword\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginMain = props => {\n  _s();\n\n  var DUMMY_USER = {\n    email: \"christcrom988@gmail.com\",\n    password: \"phenoix1\",\n    sec1: [\"Django\", \"Burnet\", \"Cromer\", \"Nissan Titan\"]\n  };\n  const [forgotPassword, setForgotPassword] = useState(false);\n  const [changePassword, setChangePassword] = useState(true);\n  const [passwordForogtVeri, setPasswordForgotVeri] = useState(false);\n\n  const onForgotSubmit = (email, sec1, sec2, sec3, sec4, needed) => {\n    console.log(needed);\n    var count = 0;\n\n    if (sec1 === DUMMY_USER.sec1) {\n      count++;\n    }\n\n    if (sec2 === DUMMY_USER.sec2) {\n      count++;\n    }\n\n    if (sec3 === DUMMY_USER.sec3) {\n      count++;\n    }\n\n    if (sec4 === DUMMY_USER.sec4) {\n      count++;\n    }\n\n    if (count > needed) {\n      setPasswordForgotVeri(true);\n      setChangePassword(true);\n    } else {\n      alert(\"One or all of your Security Questions are incorrect please try again!\");\n    }\n  };\n\n  const onEmailBlur = email => {\n    if (email !== DUMMY_USER.email) {\n      alert(\"User with Given email does not exisit Please try again with valid email\");\n    }\n  };\n\n  const ForgotPasswordEvent = event => {\n    setForgotPassword(event);\n  };\n\n  const loginHandler = (email, password) => {\n    if (DUMMY_USER.email.includes(email) && DUMMY_USER.password.includes(password)) {\n      props.setIsLoggedIn(true);\n      props.setLoginActive(false);\n    } else {\n      alert(\"You are not a member! Get out of here!\");\n    }\n  };\n\n  const LoginNotActiveHandler = event => {\n    props.setLoginActive(false);\n  };\n\n  const onPasswordChange = event => {\n    setChangePassword(false);\n    DUMMY_USER.password = event.toString();\n    props.setLoginActive(true);\n    alert('Success! your password has been updated.');\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [passwordForogtVeri && changePassword && /*#__PURE__*/_jsxDEV(ChangePassword, {\n      setLoginActive: props.setLoginActive,\n      onPasswordChange: onPasswordChange,\n      setChangePassword: setChangePassword\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 50\n    }, this), forgotPassword && /*#__PURE__*/_jsxDEV(ForgotPassword, {\n      onEmailBlur: onEmailBlur,\n      setLoginActive: props.setLoginActive,\n      onForgotSubmit: onForgotSubmit,\n      onForgotPassword: ForgotPasswordEvent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 32\n    }, this), props.loginActive && /*#__PURE__*/_jsxDEV(LoginPage, {\n      setIsLoggedIn: props.setIsLoggedIn,\n      isLoggedIn: props.isLoggedIn,\n      onLogin: loginHandler,\n      onLoginClick: LoginNotActiveHandler,\n      onForgotPassword: ForgotPasswordEvent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 35\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LoginMain, \"bRkzwuDeNb/RoNv1m3Ph14Y9iPk=\");\n\n_c = LoginMain;\nexport default LoginMain;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginMain\");","map":{"version":3,"names":["React","Fragment","useState","LoginPage","ForgotPassword","Card","Modal","ChangePassword","LoginMain","props","DUMMY_USER","email","password","sec1","forgotPassword","setForgotPassword","changePassword","setChangePassword","passwordForogtVeri","setPasswordForgotVeri","onForgotSubmit","sec2","sec3","sec4","needed","console","log","count","alert","onEmailBlur","ForgotPasswordEvent","event","loginHandler","includes","setIsLoggedIn","setLoginActive","LoginNotActiveHandler","onPasswordChange","toString","loginActive","isLoggedIn"],"sources":["C:/Coding/PumkpinPatch-main/pumkpin-patch-app/01-pumkpin-patch-frontend/src/components/Login/LoginMain.js"],"sourcesContent":["import React from \"react\";\r\nimport { Fragment, useState } from \"react\";\r\nimport LoginPage from \"./LoginPage\";\r\nimport ForgotPassword from \"./ForgotPassword\";\r\nimport Card from '../UI/Card';\r\nimport Modal from '../UI/Modal';\r\nimport ChangePassword from \"./ChangePassword\";\r\nconst LoginMain = props => {\r\n    var DUMMY_USER =\r\n    {\r\n        email: \"christcrom988@gmail.com\",\r\n        password: \"phenoix1\",\r\n        sec1: [ \"Django\",\r\n         \"Burnet\",\r\n         \"Cromer\",\r\n          \"Nissan Titan\"]\r\n    };\r\n\r\n    const [forgotPassword, setForgotPassword] = useState(false);\r\n    const [changePassword, setChangePassword] =useState(true)\r\n    const [passwordForogtVeri, setPasswordForgotVeri] = useState(false);\r\n\r\n\r\n    const onForgotSubmit = (email, sec1, sec2, sec3, sec4, needed) => {\r\n        console.log(needed);\r\n        var count = 0;\r\n        if(sec1 === DUMMY_USER.sec1){\r\n            count++;\r\n        }\r\n        if(sec2 === DUMMY_USER.sec2){\r\n            count++;\r\n        }\r\n        if(sec3 === DUMMY_USER.sec3){\r\n            count++;\r\n        }\r\n        if(sec4 === DUMMY_USER.sec4){\r\n            count++;\r\n        }\r\n        if (count > needed) {\r\n           \r\n            setPasswordForgotVeri(true);\r\n            setChangePassword(true)\r\n        }\r\n        \r\n        else {\r\n            alert(\"One or all of your Security Questions are incorrect please try again!\")\r\n        }\r\n\r\n    };\r\n    const onEmailBlur = (email) => {\r\n        if (email !== DUMMY_USER.email) {\r\n            alert(\"User with Given email does not exisit Please try again with valid email\")\r\n        }\r\n    }\r\n    const ForgotPasswordEvent = event => {\r\n        setForgotPassword(event);\r\n    };\r\n\r\n    const loginHandler = (email, password) => {\r\n        if (DUMMY_USER.email.includes(email) && DUMMY_USER.password.includes(password)) {\r\n            props.setIsLoggedIn(true);\r\n            props.setLoginActive(false)\r\n        } else {\r\n            alert(\"You are not a member! Get out of here!\");\r\n        }\r\n    };\r\n\r\n    const LoginNotActiveHandler = event => {\r\n        props.setLoginActive(false)\r\n    };\r\n\r\n    const onPasswordChange = event =>{\r\n       \r\n        setChangePassword(false);\r\n        DUMMY_USER.password = event.toString();\r\n        props.setLoginActive(true)\r\n        alert('Success! your password has been updated.')\r\n       \r\n        \r\n    }\r\n\r\n\r\n  \r\n\r\n\r\n    return (\r\n        <Fragment>\r\n        {passwordForogtVeri && changePassword && <ChangePassword setLoginActive={props.setLoginActive} onPasswordChange = {onPasswordChange} setChangePassword={setChangePassword}/>}\r\n            {forgotPassword && <ForgotPassword onEmailBlur={onEmailBlur} setLoginActive={props.setLoginActive} onForgotSubmit={onForgotSubmit} onForgotPassword={ForgotPasswordEvent} />}\r\n            {props.loginActive && <LoginPage  setIsLoggedIn={props.setIsLoggedIn} isLoggedIn={props.isLoggedIn} onLogin={loginHandler} onLoginClick={LoginNotActiveHandler} onForgotPassword={ForgotPasswordEvent} />}\r\n        </Fragment>\r\n    );\r\n};\r\nexport default LoginMain;"],"mappings":"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"},"metadata":{},"sourceType":"module"}